import type { GadgetModel } from "gadget-server";

// This metadata describes a model's schema
// View and edit your model in the Gadget editor at https://myapp.gadget.dev/edit
export const schema: GadgetModel = {
  type: "gadget/model-schema/v1",
  shopifyModel: "shop",
  fields: {
    accessToken: { type: "EncryptedString" },
    address1: { type: "String", shopifyField: "address1" },
    address2: { type: "String", shopifyField: "address2" },
    checkoutApiSupported: { type: "Boolean", shopifyField: "checkout_api_supported" },
    city: { type: "String", shopifyField: "city" },
    cookieConsentLevel: { type: "String", shopifyField: "cookie_consent_level" },
    country: { type: "String", shopifyField: "country" },
    countryCode: { type: "String", shopifyField: "country_code" },
    countryName: { type: "String", shopifyField: "country_name" },
    countyTaxes: { type: "JSON", shopifyField: "county_taxes" },
    createdAt: { type: "DateTime", validations: [{ type: "required" }] },
    currency: { type: "String", shopifyField: "currency" },
    customerEmail: { type: "String", shopifyField: "customer_email" },
    domain: { type: "String", shopifyField: "domain" },
    eligibleForCardReaderGiveaway: { type: "Boolean", shopifyField: "eligible_for_card_reader_giveaway" },
    eligibleForPayments: { type: "Boolean", shopifyField: "eligible_for_payments" },
    email: { type: "String", shopifyField: "email" },
    enabledPresentmentCurrencies: { type: "JSON", shopifyField: "enabled_presentment_currencies" },
    finances: { type: "Boolean", shopifyField: "finances" },
    forceSsl: { type: "Boolean", shopifyField: "force_ssl" },
    gdprRequests: { type: "HasMany", relatedModel: "shopifyGdprRequest", inverseField: "shop" },
    googleAppsDomain: { type: "String", shopifyField: "google_apps_domain" },
    googleAppsLoginEnabled: { type: "Boolean", shopifyField: "google_apps_login_enabled" },
    grantedScopes: { type: "JSON" },
    hasDiscounts: { type: "Boolean", shopifyField: "has_discounts" },
    hasGiftCards: { type: "Boolean", shopifyField: "has_gift_cards" },
    hasStorefront: { type: "Boolean", shopifyField: "has_storefront" },
    ianaTimezone: { type: "String", shopifyField: "iana_timezone" },
    id: { type: "ID", shopifyField: "id" },
    installedViaApiKey: { type: "String" },
    latitude: { type: "Number", shopifyField: "latitude" },
    longitude: { type: "Number", shopifyField: "longitude" },
    marketingSmsContentEnabledAtCheckout: {
      type: "Boolean",
      shopifyField: "marketing_sms_consent_enabled_at_checkout",
    },
    moneyFormat: { type: "String", shopifyField: "money_format" },
    moneyInEmailsFormat: { type: "String", shopifyField: "money_in_emails_format" },
    moneyWithCurrencyFormat: { type: "String", shopifyField: "money_with_currency_format" },
    moneyWithCurrencyInEmailsFormat: { type: "String", shopifyField: "money_with_currency_in_emails_format" },
    multiLocationEnabled: { type: "Boolean", shopifyField: "multi_location_enabled" },
    myshopifyDomain: { type: "String", shopifyField: "myshopify_domain" },
    name: { type: "String", shopifyField: "name" },
    passwordEnabled: { type: "Boolean", shopifyField: "password_enabled" },
    phone: { type: "String", shopifyField: "phone" },
    planDisplayName: { type: "String", shopifyField: "plan_display_name" },
    planName: { type: "String", shopifyField: "plan_name" },
    preLaunchEnabled: { type: "Boolean", shopifyField: "pre_launch_enabled" },
    primaryLocale: { type: "String", shopifyField: "primary_locale" },
    products: { type: "HasMany", relatedModel: "shopifyProduct", inverseField: "shop" },
    province: { type: "String", shopifyField: "province" },
    provinceCode: { type: "String", shopifyField: "province_code" },
    registeredWebhooks: { type: "JSON" },
    requiresExtraPaymentsAgreement: { type: "Boolean", shopifyField: "requires_extra_payments_agreement" },
    setupRequired: { type: "Boolean", shopifyField: "setup_required" },
    shopOwner: { type: "String", shopifyField: "shop_owner" },
    shopifyCreatedAt: { type: "DateTime", shopifyField: "created_at" },
    shopifyUpdatedAt: { type: "DateTime", shopifyField: "updated_at" },
    source: { type: "String", shopifyField: "source" },
    state: { type: "RecordState", validations: [{ type: "required" }] },
    syncs: { type: "HasMany", relatedModel: "shopifySync", inverseField: "shop" },
    taxShipping: { type: "Boolean", shopifyField: "tax_shipping" },
    taxesIncluded: { type: "Boolean", shopifyField: "taxes_included" },
    timezone: { type: "String", shopifyField: "timezone" },
    transactionalSmsDisabled: { type: "Boolean", shopifyField: "transactional_sms_disabled" },
    updatedAt: { type: "DateTime", validations: [{ type: "required" }] },
    weightUnit: { type: "String", shopifyField: "weight_unit" },
    zipCode: { type: "String", shopifyField: "zip" },
  },
};